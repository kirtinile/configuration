spring:
  datasource:
    # initialization-mode: never 
    initialization-mode: always 
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/banking_core_service_new?enabledTLSProtocols=TLSv1.2
    username: root
    password: root
  jpa:
    defer-datasource: true
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
  cloud:
    stream:
      function:
        definition: producer;
      bindings:
        producer-out-0:
          destination: notification-topic
   kafka:
     consumer:
        bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
        group-id: group_id
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
     producer:
        bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    org:
      springframework:
        web:
          servlet:
            DispatcherServlet: TRACE

kafka:
  binding:
    name: producer-out-0

server:
  port: 8092

eureka:
  client:
    registerWithEureka: true
    serviceUrl: 
      defaultZone: ${EUREKA_SERVER:http://localhost:8083/eureka}
    healthcheck:
      enabled: true


info:
  app:
    name: ${spring.application.name}
